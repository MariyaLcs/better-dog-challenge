{"version":3,"sources":["images/whiskey.jpg","images/tubby.jpg","images/hazel.jpg","DayList.js","DayDetails.js","Routes.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DayList","className","this","props","days","map","d","key","name","src","alt","to","Component","DayDetails","day","title","facts","fact","i","Routes","exact","path","render","match","params","currentDay","find","toLowerCase","Navbar","dogLinks","dog","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","defaultProps","whiskey","hazel","tubby","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d819bbea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiskey.5c1e3b17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tubby.2f47cb65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hazel.4eb85e80.jpg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DayList.css\";\n\nclass DayList extends Component {\n  render() {\n    return (\n      <div className=\"DogList\">\n        <h1 className=\"display-1 text-center mt-3 mb-5\">\n          30 Days to a Better Dog!\n        </h1>\n        <div className=\"row\">\n          {this.props.days.map((d) => (\n            <div className=\"Dog col-lg-4 text-center\" key={d.name}>\n              <img src={d.src} alt={d.name} />\n              <h3 className=\"mt-3\">\n                <Link className=\"underline\" to={`/days/${d.name}`}>\n                  {d.name}\n                </Link>\n              </h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default DayList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DayDetails.css\";\n\nclass DayDetails extends Component {\n  render() {\n    let { day } = this.props;\n    return (\n      <div className=\"DogDetails row justify-content-center mt-5\">\n        <div className=\"col-11 col-lg-5\">\n          <div className=\"DogDetails-card card\">\n            <img className=\"card-img-top\" src={day.src} alt={day.name} />\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">{day.name}</h2>\n              <h4 className=\"card-subtitle text-muted\">{day.title}</h4>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n              {day.facts.map((fact, i) => (\n                <li className=\"list-group-item\" key={i}>\n                  {fact}\n                </li>\n              ))}\n            </ul>\n            <div className=\"card-body\">\n              <Link to=\"/days\" className=\"btn btn-info\">\n                Go Back\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default DayDetails;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport DayList from \"./DayList\";\nimport DayDetails from \"./DayDetails\";\n\nclass Routes extends Component {\n  render() {\n    const getDay = (props) => {\n      let name = props.match.params.name;\n      let currentDay = this.props.days.find(\n        (day) => day.name.toLowerCase() === name.toLowerCase()\n      );\n      return <DayDetails {...props} day={currentDay} />;\n    };\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/days\"\n          render={() => <DayList days={this.props.days} />}\n        />\n        <Route exact path=\"/days/:name\" render={getDay} />\n        <Redirect to=\"/days\" />\n      </Switch>\n    );\n  }\n}\nexport default Routes;\n","import React, { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    const dogLinks = this.props.days.map((dog) => (\n      <li className=\"nav-item\" key={dog.name}>\n        <NavLink exact to={`/days/${dog.name}`} className=\"nav-link\">\n          {dog.name}\n        </NavLink>\n      </li>\n    ));\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/days\">\n          Dog App\n        </Link>\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/days\" className=\"nav-link\">\n                Home\n              </NavLink>\n            </li>\n            {dogLinks}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Routes from \"./Routes\";\nimport Navbar from \"./Navbar\";\nimport whiskey from \"./images/whiskey.jpg\";\nimport tubby from \"./images/tubby.jpg\";\nimport hazel from \"./images/hazel.jpg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  static defaultProps = {\n    days: [\n      {\n        name: \"Day1\",\n        title: \"Engage, challenge, and bond with your dog\",\n        src: whiskey,\n        facts: [\"1...\", \"2...\", \"3...\"],\n      },\n      {\n        name: \"Day2\",\n        title: \"Walk with purpose\",\n        src: hazel,\n        facts: [\"1...\", \"2...\", \"3...\"],\n      },\n      {\n        name: \"Day3\",\n        title: \"Get out into nature\",\n        src: tubby,\n        facts: [\"1...\", \"2...\", \"3...\"],\n      },\n    ],\n  };\n  render() {\n    return (\n      <div>\n        <Navbar days={this.props.days} />\n        <div className=\"container\">\n          <Routes days={this.props.days} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}